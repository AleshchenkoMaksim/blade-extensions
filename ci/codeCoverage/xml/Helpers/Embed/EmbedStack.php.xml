<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="EmbedStack.php" path="/Helpers/Embed">
    <totals>
      <lines total="313" comments="158" code="155" executable="48" executed="38" percent="79.17"/>
      <methods count="19" tested="9" percent="47.37"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Radic\BladeExtensions\Helpers\Embed\EmbedStack" start="31" executable="48" executed="38" crap="24.99">
      <package full="" name="" sub="" category=""/>
      <namespace name="Radic\BladeExtensions\Helpers\Embed"/>
      <method name="__construct" signature="__construct(Factory $viewFactory, Filesystem $files, BladeCompiler $bladeCompiler, $viewPath, $vars = [])" start="56" end="63" crap="1" executable="6" executed="6" coverage="100"/>
      <method name="setData" signature="setData($_data)" start="72" end="77" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="start" signature="start()" start="84" end="87" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="setContent" signature="setContent($content)" start="96" end="101" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="end" signature="end()" start="108" end="124" crap="1" executable="13" executed="13" coverage="100"/>
      <method name="getAbsoluteViewPath" signature="getAbsoluteViewPath()" start="131" end="134" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getViewFileContent" signature="getViewFileContent()" start="143" end="146" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="getBladeCompiledViewFileContent" signature="getBladeCompiledViewFileContent()" start="153" end="156" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="write" signature="write($content, $name = null)" start="166" end="179" crap="3.02" executable="8" executed="7" coverage="87.5"/>
      <method name="remove" signature="remove($name)" start="188" end="195" crap="1" executable="4" executed="4" coverage="100"/>
      <method name="exists" signature="exists($view)" start="204" end="207" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="file" signature="file($path, $data = [], $mergeData = [])" start="218" end="221" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="make" signature="make($view, $data = [], $mergeData = [])" start="232" end="235" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="share" signature="share($key, $value = null)" start="245" end="248" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="composer" signature="composer($views, $callback, $priority = null)" start="259" end="262" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="creator" signature="creator($views, $callback)" start="272" end="275" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="addNamespace" signature="addNamespace($namespace, $hints)" start="283" end="286" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="replaceNamespace" signature="replaceNamespace($namespace, $hints)" start="296" end="299" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="__call" signature="__call($method, $parameters)" start="309" end="312" crap="2.00" executable="1" executed="0" coverage="0"/>
    </class>
    <coverage>
      <line nr="58">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testTest"/>
      </line>
      <line nr="59">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testTest"/>
      </line>
      <line nr="60">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testTest"/>
      </line>
      <line nr="61">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testTest"/>
      </line>
      <line nr="62">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testTest"/>
      </line>
      <line nr="63">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testTest"/>
      </line>
      <line nr="74">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="76">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="86">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="98">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="100">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="110">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="111">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="112">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="113">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="114">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="115">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="116">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="117">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="118">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="119">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="120">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="121">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="123">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="133">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="145">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="155">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="168">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="169">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="172">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="173">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="175">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="176">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="178">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="190">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="191">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="192">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
      <line nr="194">
        <covered by="Radic\Tests\BladeExtensions\Helpers\Embed\EmbedStackTest::testMakeStack"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2017. Robin Radic.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * The license can be found in the package and online at https://radic.mit-license.org.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * @copyright 2017 Robin Radic</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * @license https://radic.mit-license.org MIT License</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @version 7.0.0 Radic\BladeExtensions</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Radic</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeExtensions</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Helpers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Embed</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Filesystem</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Filesystem</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Contracts</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">View</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Factory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">View</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Compilers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeCompiler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Radic</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeExtensions</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Helpers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">UsesSections</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> * Manages the Loop instances.</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> * @version        2.1.0</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT"> * @author         Robin Radic</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT"> * @license        MIT License - http://radic.mit-license.org</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT"> * @copyright      (2011-2014, Robin Radic - Radic Technologies</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT"> * @see           http://robin.radic.nl/blade-extensions</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="31">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EmbedStack</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Factory</token>
      </line>
      <line no="32">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UsesSections</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bladeCompiler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$viewPath</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$vars</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * EmbedStack constructor.</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * @param \Illuminate\Contracts\View\Factory       $viewFactory</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @param \Illuminate\Filesystem\Filesystem        $files</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     * @param \Illuminate\View\Compilers\BladeCompiler $bladeCompiler</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * @param                                          $viewPath</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     * @param array                                    $vars</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Factory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Filesystem</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BladeCompiler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bladeCompiler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$viewPath</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$vars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setViewFactory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$viewFactory</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bladeCompiler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$bladeCompiler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewPath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$viewPath</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vars</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$vars</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * setData method.</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * @param $_data</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$_data</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="78"/>
      <line no="79">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     * start method.</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">start</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="90">
        <token name="T_DOC_COMMENT">     * setContent method.</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">     * @param $content</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">content</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="102"/>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="104">
        <token name="T_DOC_COMMENT">     * end method.</token>
      </line>
      <line no="105">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="106">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="107">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">end</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bladeCompiler</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">compileString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">content</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$viewContent</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getBladeCompiledViewFileContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_LIST">list</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_DOT">.</token>
        <token name="T_VARIABLE">$viewContent</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">extract</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_data</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$__data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$__env</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">extract</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">vars</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ob_start</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_INCLUDE">include</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">remove</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ob_get_clean</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ECHO">echo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122"/>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="127">
        <token name="T_DOC_COMMENT">     * getAbsoluteViewPath.</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="129">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getAbsoluteViewPath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getViewFactory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFinder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">find</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewPath</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135"/>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="137">
        <token name="T_DOC_COMMENT">     * getViewFileContent.</token>
      </line>
      <line no="138">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="139">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     * @throws \Illuminate\Contracts\Filesystem\FileNotFoundException</token>
      </line>
      <line no="142">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getViewFileContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">files</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAbsoluteViewPath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="147"/>
      <line no="148">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="149">
        <token name="T_DOC_COMMENT">     * getBladeCompiledViewFileContent.</token>
      </line>
      <line no="150">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="151">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="152">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getBladeCompiledViewFileContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">bladeCompiler</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">compileString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getViewFileContent</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="157"/>
      <line no="158">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="159">
        <token name="T_DOC_COMMENT">     * write method.</token>
      </line>
      <line no="160">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="161">
        <token name="T_DOC_COMMENT">     * @param      $content</token>
      </line>
      <line no="162">
        <token name="T_DOC_COMMENT">     * @param null $name</token>
      </line>
      <line no="163">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="164">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">write</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">storage_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'framework/views/blade-extensions'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">files</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">files</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">makeDirectory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_slug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewPath</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_DOT">.</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'__'</token>
        <token name="T_DOT">.</token>
        <token name="T_STRING">uniqid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">time</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">path_join</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">files</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">put</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177"/>
      <line no="178">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="180"/>
      <line no="181">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="182">
        <token name="T_DOC_COMMENT">     * remove method.</token>
      </line>
      <line no="183">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="184">
        <token name="T_DOC_COMMENT">     * @param $name</token>
      </line>
      <line no="185">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="186">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="187">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">remove</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">storage_path</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'framework/views/blade-extensions'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">path_join</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tmpDir</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">files</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">delete</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="196"/>
      <line no="197">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="198">
        <token name="T_DOC_COMMENT">     * Determine if a given view exists.</token>
      </line>
      <line no="199">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="200">
        <token name="T_DOC_COMMENT">     * @param string $view</token>
      </line>
      <line no="201">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="202">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="203">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$view</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exists'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="208"/>
      <line no="209">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="210">
        <token name="T_DOC_COMMENT">     * Get the evaluated view contents for the given path.</token>
      </line>
      <line no="211">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="212">
        <token name="T_DOC_COMMENT">     * @param string $path</token>
      </line>
      <line no="213">
        <token name="T_DOC_COMMENT">     * @param array  $data</token>
      </line>
      <line no="214">
        <token name="T_DOC_COMMENT">     * @param array  $mergeData</token>
      </line>
      <line no="215">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="216">
        <token name="T_DOC_COMMENT">     * @return \Illuminate\Contracts\View\View</token>
      </line>
      <line no="217">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">file</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mergeData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'file'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="222"/>
      <line no="223">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="224">
        <token name="T_DOC_COMMENT">     * Get the evaluated view contents for the given view.</token>
      </line>
      <line no="225">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="226">
        <token name="T_DOC_COMMENT">     * @param string $view</token>
      </line>
      <line no="227">
        <token name="T_DOC_COMMENT">     * @param array  $data</token>
      </line>
      <line no="228">
        <token name="T_DOC_COMMENT">     * @param array  $mergeData</token>
      </line>
      <line no="229">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="230">
        <token name="T_DOC_COMMENT">     * @return \Illuminate\Contracts\View\View</token>
      </line>
      <line no="231">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">make</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$view</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$mergeData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'make'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="236"/>
      <line no="237">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="238">
        <token name="T_DOC_COMMENT">     * Add a piece of shared data to the environment.</token>
      </line>
      <line no="239">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="240">
        <token name="T_DOC_COMMENT">     * @param array|string $key</token>
      </line>
      <line no="241">
        <token name="T_DOC_COMMENT">     * @param mixed        $value</token>
      </line>
      <line no="242">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="243">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="244">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">share</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'share'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="249"/>
      <line no="250">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="251">
        <token name="T_DOC_COMMENT">     * Register a view composer event.</token>
      </line>
      <line no="252">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="253">
        <token name="T_DOC_COMMENT">     * @param array|string    $views</token>
      </line>
      <line no="254">
        <token name="T_DOC_COMMENT">     * @param \Closure|string $callback</token>
      </line>
      <line no="255">
        <token name="T_DOC_COMMENT">     * @param int|null        $priority</token>
      </line>
      <line no="256">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="257">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="258">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">composer</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$views</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$priority</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'composer'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="263"/>
      <line no="264">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="265">
        <token name="T_DOC_COMMENT">     * Register a view creator event.</token>
      </line>
      <line no="266">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="267">
        <token name="T_DOC_COMMENT">     * @param array|string    $views</token>
      </line>
      <line no="268">
        <token name="T_DOC_COMMENT">     * @param \Closure|string $callback</token>
      </line>
      <line no="269">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="270">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="271">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">creator</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$views</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'creator'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="276"/>
      <line no="277">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="278">
        <token name="T_DOC_COMMENT">     * Add a new namespace to the loader.</token>
      </line>
      <line no="279">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="280">
        <token name="T_DOC_COMMENT">     * @param string       $namespace</token>
      </line>
      <line no="281">
        <token name="T_DOC_COMMENT">     * @param string|array $hints</token>
      </line>
      <line no="282">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="283">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">addNamespace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$namespace</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hints</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="285">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'addNamespace'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="286">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="287"/>
      <line no="288">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="289">
        <token name="T_DOC_COMMENT">     * Replace the namespace hints for the given namespace.</token>
      </line>
      <line no="290">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="291">
        <token name="T_DOC_COMMENT">     * @param string       $namespace</token>
      </line>
      <line no="292">
        <token name="T_DOC_COMMENT">     * @param string|array $hints</token>
      </line>
      <line no="293">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="294">
        <token name="T_DOC_COMMENT">     * @return $this</token>
      </line>
      <line no="295">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="296">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">replaceNamespace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$namespace</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hints</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="297">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'replaceNamespace'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">func_get_args</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="299">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="300"/>
      <line no="301">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="302">
        <token name="T_DOC_COMMENT">     * Dynamically call the view factory instance.</token>
      </line>
      <line no="303">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="304">
        <token name="T_DOC_COMMENT">     * @param string $method</token>
      </line>
      <line no="305">
        <token name="T_DOC_COMMENT">     * @param array  $parameters</token>
      </line>
      <line no="306">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="307">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="308">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__call</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parameters</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">viewFactory</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parameters</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="313">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="314"/>
    </source>
  </file>
</phpunit>
