<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="HelperRepository.php" path="/">
    <totals>
      <lines total="56" comments="28" code="28" executable="6" executed="6" percent="100.00"/>
      <methods count="4" tested="4" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Radic\BladeExtensions\HelperRepository" start="18" executable="6" executed="6" crap="5">
      <package full="" name="" sub="" category=""/>
      <namespace name="Radic\BladeExtensions"/>
      <method name="__construct" signature="__construct()" start="28" end="31" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="put" signature="put($key, $instance)" start="36" end="39" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="has" signature="has($key)" start="44" end="47" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="get" signature="get($key, $default = null)" start="52" end="55" crap="2" executable="1" executed="1" coverage="100"/>
    </class>
    <coverage>
      <line nr="30">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::test_can_create_instance"/>
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::testGetHelperClassInstances"/>
      </line>
      <line nr="31">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::test_can_create_instance"/>
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::testGetHelperClassInstances"/>
      </line>
      <line nr="38">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::testGetHelperClassInstances"/>
      </line>
      <line nr="39">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::testGetHelperClassInstances"/>
      </line>
      <line nr="46">
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::testGetHelperClassInstances"/>
      </line>
      <line nr="54">
        <covered by="Radic\Tests\BladeExtensions\HelperRepositoryTest::testGetHelperClassInstances"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2017. Robin Radic.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * The license can be found in the package and online at https://radic.mit-license.org.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * @copyright 2017 Robin Radic</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * @license https://radic.mit-license.org MIT License</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @version 7.0.0 Radic\BladeExtensions</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Radic</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeExtensions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT"> * {@inheritdoc}</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="18">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HelperRepository</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Contracts</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">HelperRepository</token>
      </line>
      <line no="19">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @var array|\ArrayObject&lt;string,object&gt;</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$helpers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * HelperRepository constructor.</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">helpers</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">put</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">helpers</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">has</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">helpers</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">has</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">helpers</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$default</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="57"/>
    </source>
  </file>
</phpunit>
