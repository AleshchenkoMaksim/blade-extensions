<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="DirectiveRegistry.php" path="/">
    <totals>
      <lines total="215" comments="77" code="138" executable="46" executed="37" percent="80.43"/>
      <methods count="12" tested="6" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Radic\BladeExtensions\DirectiveRegistry" start="24" executable="46" executed="37" crap="33.87">
      <package full="" name="" sub="" category=""/>
      <namespace name="Radic\BladeExtensions"/>
      <method name="__construct" signature="__construct(Application $app)" start="61" end="64" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="isHooked" signature="isHooked()" start="69" end="72" crap="2.00" executable="1" executed="0" coverage="0"/>
      <method name="setHooker" signature="setHooker($hooker)" start="77" end="82" crap="2.00" executable="2" executed="0" coverage="0"/>
      <method name="hookToCompiler" signature="hookToCompiler()" start="87" end="103" crap="4.18" executable="9" executed="7" coverage="77.777777777778"/>
      <method name="getCompiler" signature="getCompiler()" start="108" end="111" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="register" signature="register($name, $handler = null)" start="116" end="129" crap="5.07" executable="7" executed="6" coverage="85.714285714286"/>
      <method name="getNames" signature="getNames()" start="134" end="137" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="get" signature="get($name)" start="142" end="145" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="has" signature="has($name)" start="150" end="153" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="call" signature="call($name, $params = [])" start="160" end="183" crap="6.02" executable="13" executed="12" coverage="92.307692307692"/>
      <method name="isCallableWithAtSign" signature="isCallableWithAtSign($callback)" start="192" end="195" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="setVersionOverrides" signature="setVersionOverrides($versionOverrides)" start="200" end="214" crap="4.37" executable="7" executed="5" coverage="71.428571428571"/>
    </class>
    <coverage>
      <line nr="63">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="64">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="89">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="92">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="94">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="95">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="97">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="98">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="103">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="110">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="118">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="119">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="120">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="122">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="125">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="128">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="136">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="144">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="152">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testRegisterAcceptsArray"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
      </line>
      <line nr="162">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="163">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="164">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="166">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
      </line>
      <line nr="167">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
      </line>
      <line nr="169">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="170">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="171">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="172">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="175">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="177">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="182">
        <covered by="Radic\Tests\BladeExtensions\DirectiveRegistryTest::testCallRegisteredClosure"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="194">
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
      </line>
      <line nr="203">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="206">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="207">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="210">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
      <line nr="213">
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testServiceProviderRegister"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testIsAServiceProvider"/>
        <covered by="Radic\Tests\BladeExtensions\BladeExtensionsServiceProviderTest::testProvides"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\BreakpointDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testReplace"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ContinueDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\DumpDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EmbedDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndforeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndmarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndminifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\EndspacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\ForeachDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\IfSectionDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacroDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MacrodefDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MarkdownDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\MinifyDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SetDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\SpacelessDirectiveTest::testTest"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testView"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testPatternIsValidRegex"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testSettersAndGetters"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testCompatibility"/>
        <covered by="Radic\Tests\BladeExtensions\Directives\UnsetDirectiveTest::testTest"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2017. Robin Radic.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * The license can be found in the package and online at https://radic.mit-license.org.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * @copyright 2017 Robin Radic</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * @license https://radic.mit-license.org MIT License</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @version 7.0.0 Radic\BladeExtensions</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Radic</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeExtensions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Closure</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Illuminate</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Contracts</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Foundation</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Application</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Radic</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeExtensions</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Directives</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">DirectiveInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Radic</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeExtensions</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Exceptions</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">InvalidDirectiveClassException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Radic</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BladeExtensions</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Helpers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Util</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20"/>
      <line no="21">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT"> * {@inheritdoc}</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="24">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DirectiveRegistry</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Contracts</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">DirectiveRegistry</token>
      </line>
      <line no="25">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * The registered directives.</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * @var array</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$directives</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * The override directives.</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * @var array</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$overrides</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * @var array|\Radic\BladeExtensions\Directives\AbstractDirective[]</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resolved</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @var \Illuminate\Contracts\Foundation\Application */</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$app</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47"/>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/** @var bool */</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hooked</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50"/>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     * @var null|string|\Closure</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hooker</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="55"/>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     * DirectiveRegistry constructor.</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     * @param \Illuminate\Contracts\Container\Container|\Illuminate\Contracts\Foundation\Application $app</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Application</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$app</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">app</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$app</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isHooked</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hooked</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="73"/>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setHooker</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hooker</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hooker</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hooker</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80"/>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="83"/>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="86">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hookToCompiler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hooked</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hooked</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="93"/>
      <line no="94">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">null</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hooker</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getNames</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCompiler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">extend</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">call</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">app</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">call</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hooker</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'handle'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="104"/>
      <line no="105">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="106">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="107">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getCompiler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">app</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'view'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEngineResolver</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">resolve</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'blade'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCompiler</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="112"/>
      <line no="113">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="114">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="115">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY_CAST">(array)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$directiveName</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$directiveHandler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">register</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$directiveName</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$directiveHandler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DirectiveInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isCompatible</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">directives</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127"/>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="130"/>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="132">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="133">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getNames</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">directives</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="138"/>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">directives</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="146"/>
      <line no="147">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="148">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="149">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">has</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">directives</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="154"/>
      <line no="155">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="156">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="158">
        <token name="T_DOC_COMMENT">     * @throws \Radic\BladeExtensions\Exceptions\InvalidDirectiveClassException</token>
      </line>
      <line no="159">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">resolved</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Closure</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">resolved</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isCallableWithAtSign</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'@'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">isCallableWithAtSign</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">explode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'@'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$handler</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'handle'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">app</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">make</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$class</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INSTANCEOF">instanceof</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DirectiveInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvalidDirectiveClassException</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">forClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">resolved</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="181"/>
      <line no="182">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">resolved</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="184"/>
      <line no="185">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="186">
        <token name="T_DOC_COMMENT">     * isCallableWithAtSign method.</token>
      </line>
      <line no="187">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="188">
        <token name="T_DOC_COMMENT">     * @param $callback</token>
      </line>
      <line no="189">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="190">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="191">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">isCallableWithAtSign</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strpos</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'@'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="196"/>
      <line no="197">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="198">
        <token name="T_DOC_COMMENT">     * {@inheritdoc}</token>
      </line>
      <line no="199">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setVersionOverrides</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$versionOverrides</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if used outside of laravel framework (ie with illuminate/views) we ignore the version overrides completely.</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">class_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Illuminate\Foundation\Application'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$versionOverrides</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$overrides</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Util</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isCompatibleVersionConstraint</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">directives</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_filter</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">directives</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$overrides</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="212"/>
      <line no="213">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="215">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="216"/>
    </source>
  </file>
</phpunit>
